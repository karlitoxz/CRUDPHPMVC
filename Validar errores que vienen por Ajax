Your approach is actually not wrong, it just you need to catch the error response on your ajax request whereas, when Laravel validation fails, it throws an Error 422 (Unprocessable Entity) with corresponding error messages.
 pathname = window.location.pathname;
 var Formdata = $('#formObservacion').serializeArray();
/**Ajax code**/
$.ajax({
    type: "post",
    url: pathname+'/guardar_formulario'
    data: Formdata,
    dataType: 'json',              // let's set the expected response format
    success: function(data){
         //console.log(data);
         $('#success_message').fadeIn().html(data.message);
    },
    error: function (err) {
        if (err.status == 422) { // when status code is 422, it's a validation issue
            console.log(err.responseJSON);
            $('#success_message').fadeIn().html(err.responseJSON.message);
            
            // you can loop through the errors object and show it to the user
            console.warn(err.responseJSON.errors);
            // display errors on each form field
            $.each(err.responseJSON.errors, function (i, error) {
                var el = $(document).find('[name="'+i+'"]');
                el.after($('<span style="color: red;">'+error[0]+'</span>'));
            });
        }
    }
});
/**Ajax code ends**/ 
